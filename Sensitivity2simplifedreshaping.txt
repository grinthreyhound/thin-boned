*Stata file for cleaning and analysing the sense checked THIN data in H:\JOE\THIN\all15wide_old.dta

*stata 11 set memory: 
set memory 1g

use "H:\JOE\THIN\all15wide_old.dta", clear

*sort out z scores
*for centiles need to use age at time of weighing Must install zanthro if not already done
*need height in cm
generate weightage = eventdate-dob if weight!=.
replace weightage = weightage/365.25
generate heightage = eventdate-dob if height!=.
replace heightage = heightage/365.25
replace height = height*100 if height<2
replace height =. if height<40

egen heightzanthro = zanthro(height,ha,UK), xvar(heightage) gender(sex) gencode(male=1, female=2)

egen weightzanthro = zanthro(weight,wa,UK), xvar(weightage) gender(sex) gencode(male=1, female=2)

*sort out BMI = weight/height in m squared
drop BMI
gen BMI = weight/(height/100)^2

egen BMIzanthro = zanthro(BMI,ba,UK), xvar(weightage) gender(sex) gencode(male=1, female=2)


*initially we are going to perform the analysis dropping cases with a record of 
*t2dm or metformin etc rx without insulin
*will also need to drop the controls as well

*Therefore need to drop typediab==2 && 9
*also typebymed==2

*create new variable cluster to identify cases and controls in same matched cluster
gen cluster = case_id if case_control==0 
replace cluster = id if case_control==1
egen clusternum = group(cluster)
*clusternum is now an integer cluster marker

gen marker = clusternum if typediab==2 | typediab==9 | typebymed==2
* marker is positive if type of DM is 2 ever or metformin rx and no insulin
* generate totalcluster to fill all empty spaces in the clusternum group
egen totalcluster = total(marker), by(clusternum)
*then drop those cases and controls with a non-zero totalcluster, and totalcluster
drop if totalcluster>0
drop totalcluster
drop marker

*Need to change the case indexdate to include those consultations where the doctor was clearly thinking of diabetes.
*This is to reduce biases due to recording delay

gen marker = 0
* look at the obvious ones and mark the consultation where they occurred:
foreach var of varlist symptom1 symptom2 symptom3 symptom4 symptom5 symptom6 symptom7 symptom8 symptom9 symptom10 symptom11{
replace marker = 1 if `var'== "glycosuria"
replace marker = 1 if `var'== "glycaemia test"
replace marker = 1 if `var'== "hyperglycaemia"
replace marker = 1 if `var'== "hypoglycaemia"
replace marker = 1 if `var'== "urine glucose test"
replace marker = 1 if `var'== "impaired glucose tole"
replace marker = 1 if `var'== "ketonuria"
replace marker = 1 if `var'== "thirst"
replace marker = 1 if `var'== "diabetes"
replace marker = 1 if regexm(`var', "diab") == 1
}

foreach i of numlist 1/49{
replace marker = 1 if testdone`i' == "Fasting glucose"
replace marker = 1 if testdone`i' == "Glucose Tolerance tes"
replace marker = 1 if testdone`i' == "Hb A1C - Diabetic con"
replace marker = 1 if testdone`i' == "Urinalysis - Glucose"
replace marker = 1 if testdone`i' == "Urine dipstick for gl"
replace marker = 1 if testdone`i' == "Urine dipstick for ke"
replace marker = 1 if testdone`i' == "Blood glucose"
*replace marker = 1 if testdone`i' == "Blood gases"
*replace marker = 1 if testdone`i' == "Serum osmolality"
*replace marker = 1 if testdone`i' == "Urine Biochemistry"
replace marker = 1 if testdone`i' == "Diabetes annual check"
replace marker = 1 if testdone`i' == "Diabetes current stat"
replace marker = 1 if regexm(testdone`i', "diab") == 1
}


*get the time that these took place at: in order to only keep those in timeframe
gen markertime = indexdate-eventdate if marker==1 

*need to decide a cut-off: Allow 21 days as this is our timeframe shift. get rid of -ve ones

replace marker = 0 if markertime>21
replace marker = 0 if markertime<0 
*changes only for cases, 
replace marker = 0 if case_cont==0 

*now change indexdates to be largest value of markertime within id of cases 

*but only if marker is +ve!

*create minimum indexdate within id, and give it to all within that ID: for cases
egen newcaseindex = min(eventdate)  if marker==1, by(id) 
egen newcaseindexfull = min(newcaseindex), by(id)

*/bysort case_cont : sum newcaseindexfull  *check that no controls have new indexes -  it's fine. 

*now can replace indexdate with earliest possible mention of diabetes for cases
replace newcaseindexfull = -99 if newcaseindexfull==.
replace indexdate = newcaseindexfull if newcaseindexfull>0 & case_cont==1

drop newcaseindex newcaseindexfull marker markertime

*need to now sort out the indexdates for the controls. 
*reset indexdate to be lasttime is not enough - This needs to be more sophisticated
*need to get it so that dm not sliding into frame of ref for cases
*not lasttime but nearest one to indexdate for controls and indexdate for cases

*need to reset the indexdate of controls to be the indexdate of matched cases before resetting to being nearest date with consultation...(clusternum identifies matched groups)

gen caseindex = indexdate if case_control==1
egen groupindex = min(caseindex), by(clusternum) 
replace indexdate = groupindex
drop groupindex caseindex

gen timebeforeindex = indexdate-eventdate
sum timebeforeindex
*from -41 to 457

*need to identify nearest to zero within id for controls
*make negatives positive:
gen timefromindex = sqrt(timebeforeindex*timebeforeindex)
* from 0 to 457

*find nearest to zero within id:
egen minfromcase = min(timefromindex), by(id)
*from 0-37 days

*make indexdate = date with min time difference from indexdate for controls only

gen newcontrolindex = eventdate if timefromindex==minfromcase & case_control==0

egen bestindexdate = min(newcontrolindex) if case_con==0, by(id) 

replace indexdate = bestindexdate if case_control ==0 & bestindexdate!=.
drop newcontrolindex bestindexdate minfromcase timefromindex

replace timebeforeindex = indexdate-eventdate
*sum timebeforeindex
*from -43 to 478 - i.e. the 21 days either side of the original indexdate plus the indexdate
*-52 to 478
*so for some of them the indexdate has moved to the earliest date, but they still have records 6 weeks later
*these must be removed at this point. 

drop if timebeforeindex <0 


*DKA codes at presentation - for this proxy of codes - emergency, ketonuria, dehydrated, dyspnoea, (unwell looking or equivalent) 

*look at codes for: Thirst/polydipsia Polyuria Weight loss Fatigue Abdominal pain
*in last 2 weeks


gen dkaproxy = 0
gen thirstmarker = 0
gen polyuriamarker = 0
gen weightmarker = 0
gen fatiguemarker = 0
gen abdopmarker = 0
* mark the consultation where they occurred: 
foreach var of varlist symptom1 symptom2 symptom3 symptom4 symptom5 symptom6 symptom7 symptom8 symptom9 symptom10 symptom11{
replace thirstmarker = 1 if `var'== "thirst"
replace polyuriamarker = 1 if `var'== "frequency, urinary"
replace weightmarker = 1 if `var'== "weight"
replace weightmarker = 1 if `var'=="weight symptom"
replace weightmarker = 1 if `var'== "BMI"
replace fatiguemarker = 1 if `var'== "fatigue"
replace fatiguemarker = 1 if `var'== "drowsiness"
replace abdopmarker = 1 if `var'== "abdominal pain"

replace dkaproxy = 1 if `var'== "condition unstable"
replace dkaproxy = 1 if `var'== "collapse"
replace dkaproxy = 1 if `var'== "consciousness disturb"
replace dkaproxy = 1 if `var'== "drowsiness"
replace dkaproxy = 1 if `var'== "dyspnoea"
replace dkaproxy = 1 if `var'== "hyperventilation"
replace dkaproxy = 1 if `var'== "ketonuria"
replace dkaproxy = 1 if `var'== "looks unwell"
}

*replace dkaproxy = 1 if `var'== "emergency" - not sure about this one. Can be emergency without dka 

*how many of these codes are there? */NEED to deal with reshaping too if introducing new variables. 
gen NICEcodecount = 0
replace NICEcodecount = thirstmarker + polyuriamarker + weightmarker + fatiguemarker + abdopmarker

gen anyNICE = 1 if NICEcodecount>1 

/*type of consultation: factoface==day only
gen facetoface = 0
gen OOH = 0
gen Phone =0
gen  faceAndPhone = 0
gen  nonadmin = 0

* mark the consultation where they occurred: 
foreach var of varlist  locate1 locate2 locate3 locate5 locate6 locate4  locate7 locate8 locate9 locate10 locate11{
replace facetoface = 1 if `var'== "I"
replace facetoface = 1 if `var'== "X"
replace facetoface = 1 if `var'== "R"
replace facetoface = 1 if `var'== "K"
replace facetoface = 1 if `var'== "C"

replace OOH = 1 if `var'== "B"
replace OOH = 1 if `var'== "D"
replace OOH = 1 if `var'== "F"
replace OOH = 1 if `var'== "G"
replace OOH = 1 if `var'== "H"
replace OOH = 1 if `var'== "Z"
replace OOH = 1 if `var'== "d"
replace OOH = 1 if `var'== "f"
replace OOH = 1 if `var'== "o"
replace OOH = 1 if `var'== "u"


replace Phone = 1 if `var'== "A"
replace Phone = 1 if `var'== "J"
replace Phone = 1 if `var'== "U"

}
replace faceAndPhone = 1 if facetoface == 1 | Phone==1
replace nonadmin = 1 if facetoface == 1
replace nonadmin = 1 if OOH == 1
replace nonadmin = 1 if Phone == 1
gen anyconsult = 1

*save "H:\JOE\THIN\consults15final.dta"
********************************************************

*now get regressions going...
*use "H:\JOE\THIN\consults15forregress.dta", clear
*use "H:\JOE\THIN\consults15forregresswithNICE.dta", clear


use "H:\JOE\THIN\consults15final.dta", clear

****check ages: Any changes by doing sensitivity analysis? - V minor
*preserve
*collapse age case_control, by (id)
*sum age
*restore

********************************************************************************
*sensitivity analysis - use only if specifically coded type1 DM
*
*gen marker = clusternum if typediab!=1 & case_control==1 
**marker is positive if type of DM is not specifically coded as 1 (only)
**generate totalcluster to fill all empty spaces in the clusternum group
*egen totalcluster = total(marker), by(clusternum)
**then drop those cases and controls with a non-zero totalcluster, and totalcluster
*drop if totalcluster>0
*drop totalcluster
*drop marker
********************************************************************************
*preserve
*collapse age case_control, by (id)
*sum age
*restore

* could drop some variables we don't need...
drop indexevent weight weight_centile height height_centile medcode1 locate1 medcode2 locate2 medcode3 locate3 medcode4 locate4 medcode5 locate5 medcode6 locate6 medcode7 locate7 medcode8 locate8 medcode9 locate9 medcode10 locate10 medcode11 locate11 drug1 drug2 drug3 drug4 drug5 drug6 drug7 drug8 drug16 drug15 drug14 drug13 drug12 drug11 drug10 drug9 testdone1 testdone2 testdone3 testdone4 testdone5 testdone6 testdone7 testdone8 testdone9 testdone10 testdone11 testdone12 testdone13 testdone14 testdone15 testdone16 testdone17 testdone18 testdone19 testdone20 testdone21 testdone22 testdone23 testdone24 testdone25 testdone26 testdone27 testdone28 testdone29 testdone30 testdone31 testdone32 testdone33 testdone34 testdone35 testdone36 testdone37 testdone38 testdone39 testdone40 testdone41 testdone42 testdone43 testdone44 testdone45 testdone46 testdone47 testdone48 testdone49 symptom1 symptom2 symptom3 symptom4 symptom5 symptom6 symptom7 symptom8 symptom9 symptom10 symptom11 age

*NUmerical id:
egen numid =group(id)

****sensitivity analysis 2******
*need to generate controls from cases with an indexdate for the kids who are controls so that they are all represented.

***get rid of old controls:
drop if case_control ==0


*** new indexdate for controls: marker for nearest to a being 365 days before case indexdate
gen controlindexmarker = indexdate - 365

*need to identify nearest to controlindexmarker within id 
gen timefrommarker = sqrt((eventdate-controlindexmarker)^2)
sum timefrommarker
* from 0 to 365

*find nearest to zero within id:
egen minfrommarker = min(timefrommarker), by(id)
*from 0-365 days

***if there is a consultation within 21 days - use that as an indexdate
***if not, will need to generate one
*** i.e. indexdate becomes the date of the minfrommarker or the date of controlindexmarker if minfrommarker is missing - for events on dates prior to those dates (the new indexdate) i.e. the controls

*** get the minimum event from -365 days if within 21 days...
gen minmarker =1 if minfrommarker==timefrommarker & timefrommarker<=21
drop timefrommarker

**Superdate is the date nearest to -365 before indexdate if there is an event within 21 days
**if not then it is indexdate-365 
gen specialdate = eventdate if minmarker==1
egen superdate = min(specialdate), by(id)
replace superdate = controlindexmarker if superdate==.
format super %td
drop specialdate


*** make the cases->controls if the events happened before the superdate
replace case_control=0 if eventdate < superdate

***replace the indexdate for the controls
replace indexdate = superdate if case_control==0 

*** change the case_id
replace case_id = id if case_control==0

***change the control ids:
replace id = "control"+id if case_control==0 

***update the numids
egen newnumid=group(id)
replace numid = newnumid
drop newnumid

***make timebeforeindex accurate for new indexdates, and get rid of events after the index and before the 91 days of the study period 
replace timebeforeindex=indexdate-eventdate

drop if timebeforeindex>91
drop if timebeforeindex<0 


*there are 17/16 with>1 consult per day, drop these
duplicates drop numid eventdate, force

gen failtype=.

*****Set up so that z determines the outcome measure and i the week 

foreach z of num 13{
replace failtype = 1 if facetoface == 1 & `z'==1
replace failtype = 2 if OOH == 1 & `z'==2
replace failtype = 3 if Phone == 1 & `z'==3
replace failtype = 4 if faceAndPhone == 1 & `z'==4
replace failtype = 5 if nonadmin == 1 & `z'==5


*codes...
replace failtype = 6 if dkaproxy == 1 & `z'==6
replace failtype = 7 if thirstmarker ==1 & `z'==7
replace failtype = 8 if polyuriamarker ==1 & `z'==8
replace failtype = 9 if weightmarker ==1 & `z'==9
replace failtype = 10 if fatiguemarker ==1 & `z'==10
replace failtype = 11 if abdopmarker ==1 & `z'==11

*all consults
replace failtype = 12 if anyconsult==1 & `z'==12

*admin only
replace failtype = 13 if anyconsult==1 & nonadmin!=1 & `z'==13

*anyNICE - One or more in a consultation  
replace failtype = 14 if NICEcodecount>0  & `z'==14


 
*replace failtype = 1 if facetoface == 1
*replace failtype = 2 if OOH == 1
*replace failtype = 3 if Phone == 1
*replace failtype = 4 if faceAndPhone == 1
*replace failtype = 5 if nonadmin == 1


*codes...
*replace failtype = 6 if dkaproxy == 1
*replace failtype = 7 if thirstmarker ==1
*replace failtype = 8 if polyuriamarker ==1
*replace failtype = 9 if weightmarker ==1
*replace failtype = 10 if fatiguemarker ==1
*replace failtype = 11 if abdopmarker ==1

*all consults
*replace failtype = 12 if anyconsult==1

*admin only
*replace failtype = 13 if anyconsult==1 & nonadmin!=1

*anyNICE - One or more in a consultation 
*replace failtype = 14 if NICEcodecount>0 


..................................................
*start with 3 month data
drop if timebeforeindex>91 

*need to convert snapshot data to survival time data: reshape to wide then can add events (for entry exit etc) and then reshape back to long... 

*need panel data, i.e. entries for each id within each time period, rather then each eventdate
*to do this need to st split on time, and need the entry exit etc to do this. 

*need to number the events
*if don't drop earlier consultations (timebeforeindex >91 as earlier)end up with n1 up to 185

sort numid eventdate
by numid: generate n1 = _n

*reshape the data - the variables in the varlist are expanded to each different occasion (over n columns), things that are constant are kept as one column. i.e need to out those not constant in varlist

reshape wide eventdate weightage heightage BMI failtype heightzanthro weightzanthro  BMIzanthro timebeforeindex dkaproxy thirstmarker polyuriamarker weightmarker fatiguemarker abdopmarker facetoface OOH Phone faceAndPhone nonadmin NICEcodecount anyNICE anyconsult, i(numid) j(n1)

*add in an entrydate: make it the first one (zero) and make the fail type be 0
*generate eventdate0=indexdate-91 
*generate failtype0=0

*add in an exitdate so there is something to stsplit from
generate eventdate42=superdate
generate failtype42=88

*time to reshape to long: each id then has 42 different row entries, mostly blank, which need deleting
reshape long eventdate weightage heightage BMI failtype heightzanthro weightzanthro  BMIzanthro timebeforeindex dkaproxy thirstmarker polyuriamarker weightmarker fatiguemarker abdopmarker facetoface OOH Phone faceAndPhone nonadmin NICEcodecount anyNICE anyconsult, i(numid) j(J)

*drop lines without data
drop if eventdate==.
format eventdate %td

******now have added an event for the indexdate. 
*Some of the controls have no events and are therefore represented by failtype 88 in cases only
*need to make these into controls
*but some of them have failtype 88 in the cases and controls from the same patient (where they were in the dataset in the right timeframe 


** make a variable wewereone to show which cases controls came from: 
gen wewereone = case_id if case_control==0 
replace wewereone = id if case_control==1 

*drop duplicates within wewereone: want to drop if J=42 and case=1 if there are 2 42s within wewereone
*duplicates report wewere J if failtype==88



*generate duplic to count duplicates 
sort wewereone J  
quietly by wewereone J: gen duplic = cond(_N==1,0,_n) if failtype==88

*Drop those events that are already represented in the controls 
drop if duplic>0 & case_cont==1 & failtype==88
drop duplic

*now the failtype 88s are unique values in wewereone:
*duplicates report wewereone failtype if failtype==88


*for the cases with failtype=88, update the caseid and change the id
replace case_id = id if failtype==88 & case_control==1 
replace id = "control"+id if failtype==88 & case_control==1

* change them to controls
replace case_control=0 if failtype==88 

*Update numid
drop numid
egen numid = group(id)

*now need to stset the data
*make sure indexevent is accurate... (indexdates have changed AND need to change the indexdates of the control 88 new ones)
replace indexdate = superdate if case_control==0
gen indexevent =1 if indexdate==eventdate

*get failtype = 99 if it's the indexdate (this gets rid of the 88s)
replace failtype = 99 if indexevent==1

*enter must have changed as well: 
*create a new entry date
gen enter = indexdate-91
format enter %td

*need to replace failtype==X below to match analysis if not using z 

stset eventdate, id(numid) fail(failtype==`z') exit(failtype==99, time .) origin(enter) enter(enter) scale(1)
stsplit earlylate, at(7(7)91) after(enter) 
stset, clear
*Need to turn earlylate into an ordinal thingy of weeks before indexdate
recode earlylate (0=13) (7=12) (14=11) (21=10) (28=9) (35=8) (42=7) (49=6) (56=5) (63=4) (70=3) (77=2) (84=1) 

****indexevent gets overexpanded - can only use failtype=99 after stsetting 


*need a matching variable - for matched case/control groups: strings not allowed, so number them: (can't do this before stsetting as doesn't expand cluster identifier)
*the old ID is a good one now

generate mgroup = id
replace mgroup = case_id if case_control==0 

egen ngroup = group(mgroup)

*to use Xt poisson need to xtset the data: delare it to be panel data: xtset panelvar timevar
*xtsetting is a new command, *Panel data assumes there have been observations I think, so STset/stsplit first
*cant use string id so need to group this  NB: if want to keep labels could instead use : encode id,gen(numid) 



*create failuer from the failtype (1 initially) 
*failtype = 1 if facetoface
 *failtype = 2 if OOH = 1
 *failtype = 3 if Phone = 1
 *failtype = 4 if faceAndPhone = 1
 *failtype = 5 if nonadmin = 1

*codes...
 *failtype = 6 if dkaproxy = 1
 *failtype = 7 if thirstmarker =1
 *failtype = 8 if polyuriamarker =1
 *failtype = 9 if weightmarker =1
 *failtype = 10 if fatiguemarker =1
 *failtype = 11 if abdopmarker =1
*failtype = 12 if anyconsult=1
*13 = Admin only
*14 = one or more codes for NICE concerns in that consultation

gen failure=1 if failtype==`z'

*gen failure=1 if failtype==1
*gen failure=1 if failtype==2
*gen failure=1 if failtype==3
*gen failure=1 if failtype==4
*gen failure=1 if failtype==5
*gen failure=1 if failtype==6
*gen failure=1 if failtype==7
*gen failure=1 if failtype==8 
*gen failure=1 if failtype==9 
*gen failure=1 if failtype==10
*gen failure=1 if failtype==11
*gen failure=1 if failtype==12
*gen failure=1 if failtype==13
*gen failure =1 if failtype==14 

*Make failure missing values ==0
recode failure(.=0)

*Don't count failures on the indexdate - for cases or controls
replace failure = 0 if failtype==99


*now need to sort out multiples: caused by some presenting >1 time in stplit period (including >1 per day for some)
*generate dup to count duplicates (of each event type, not total events in the time period!!)
*make sure that this is not getting rid
sort numid earlylate failure
quietly by numid earlylate failure: gen dup = cond(_N==1,0,_n) 
*get the number of events in each duplicated time period (but not if failure!=1)
by numid earlylate failure: egen events = max(dup) if failure==1
replace events = 1 if failure==1 & dup==0
*drop duplicates in rows
drop if dup>1 
drop if earlylate==.

*now redefine the failures to be the number of events: failure is now the number of events in the time period
replace failure = events if events>failure
recode failure (.=0)

*now drop the duplicates of id eventdate where failure =0 
sort numid earlylate
quietly by numid earlylate:gen dup1 = cond(_N==1,0,_n)

drop if dup1>0 & failure==0
*check no duplicates and sensecheck earlylate
*duplicates report id earlylate
*tab earlylate
*tab failure
*tab earlylate failure

*now we have panel data with time from event in earlylate and number of events in each time period in failure

*generate an age vaiable
gen age = eventdate - dob


*Inform stata is panel data, with ngroup as panelvar (the panel variable) remember we are dropping other time periods, so there shouldn't be extras within the id - that can't be the group defining variable! 
xtset ngroup


*for each time period:
foreach i of num 1/13 {
preserve
*tab failure earlylate
display "outcome Z`z' week -`i'"
keep if earlylate==`i'
eststo: xtpoisson failure case_control age, irr iter(30) 
drop if failure ==0
tab failure case_cont, col
restore
}
estout using H:\JOE\THIN\outputs\outcomes`z'self_control_S3.tsv,  eform drop(_cons) cells( b ci_l(fmt(2)) ci_u(fmt(2)) p(fmt(3))) legend replace 
eststo clear
*display "Outcome Z`z'"
*xtpoisson failure case_control early age, irr iter(30)

***need to reset some things...if looping over z 
replace failtype=.
xtset, clear
drop dup events dup1 failure ngroup mgroup earlylate enter indexevent J wewereone age
}

gen duration = indexdate - enter
tab duration 

tab earlylate case_control 


*sweet. 



##things to do 
##Sensitivity analyses - 1. done
## 2: Cases as own controls 
##What makes up admin consults - no prescriptions etc
## Comorbid conditions

estout m1, cells(b(star fmt(3)) se(par fmt(2))) legend label varlabels(_cons constant) stats (r2 df_r bic, fmt(3 0 1) label(R Squared dfres BIC))
